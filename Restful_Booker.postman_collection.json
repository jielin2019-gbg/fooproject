{
	"info": {
		"_postman_id": "627e9478-97b9-4f37-af54-f305326cb4fb",
		"name": "Restful Booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Get Auth Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69383d00-f848-4911-85f1-b5005262cab9",
								"exec": [
									"",
									"pm.globals.set(\"my_booker_token\", pm.response.json().token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"password123\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ProjectDatabase",
			"item": [
				{
					"name": "Check Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4acfcf22-2d7d-4b13-b096-361982912ae1",
								"exec": [
									"var code = 200;",
									"",
									"pm.test(\"Status code is \" + code, function () {",
									"    pm.response.to.have.status(code);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"bookingID\", pm.response.json().bookingid);",
									"",
									"pm.test(\"Check firstname of new Booking\", function () {",
									"    pm.expect(jsonData.booking.firstname).to.eql(\"Sally\");",
									"});",
									"",
									"pm.test(\"Check lastname of new Booking\", function () {",
									"    pm.expect(jsonData.booking.lastname).to.eql(\"Brown\");",
									"});",
									"",
									"pm.test(\"Check totalprice of new Booking\", function () {",
									"    pm.expect(jsonData.booking.totalprice).to.eql(111);",
									"});",
									"",
									"pm.test(\"Check depositpaid of new Booking\", function () {",
									"    pm.expect(jsonData.booking.depositpaid).to.eql(true);",
									"});",
									"",
									"pm.test(\"Check additionalneeds of new Booking\", function () {",
									"    pm.expect(jsonData.booking.additionalneeds).to.eql(\"Breakfast\");",
									"});",
									"",
									"pm.test(\"Check bookingdates of new Booking\", function () {",
									"    pm.expect(jsonData.booking.bookingdates.checkin).to.eql(\"2020-03-06\");",
									"});",
									"",
									"pm.test(\"Check bookingdates of new Booking\", function () {",
									"    pm.expect(jsonData.booking.bookingdates.checkout).to.eql(\"2020-03-09\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstname\" : \"Sally\",\r\n  \"lastname\" : \"Brown\",\r\n  \"totalprice\" : 111,\r\n  \"depositpaid\" : true,\r\n  \"additionalneeds\" : \"Breakfast\",\r\n  \"bookingdates\" : {\r\n    \"checkin\" : \"2020-03-06\",\r\n    \"checkout\" : \"2020-03-09\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if booking exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "238c15e2-1433-46d8-9ec5-59f1baa402e4",
								"exec": [
									"var code = 200;",
									"",
									"pm.test(\"Status code is \" + code, function () {",
									"    pm.response.to.have.status(code);",
									"});",
									"",
									"pm.test(\"Booking is exist\", function() {",
									"     pm.expect(pm.response.text()).to.not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check changes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84c3da7e-f885-4957-b76a-4f9b896076f6",
								"exec": [
									"var code = 200;",
									"",
									"pm.test(\"Status code is \" + code, function () {",
									"    pm.response.to.have.status(code);",
									"});",
									"",
									"pm.test(\"booking is changed\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Kate\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "token={{my_booker_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstname\" : \"Kate\",\r\n  \"lastname\" : \"Brown\",\r\n  \"totalprice\" : 111,\r\n  \"depositpaid\" : true,\r\n  \"additionalneeds\" : \"Breakfast\",\r\n  \"bookingdates\" : {\r\n    \"checkin\" : \"2020-03-07\",\r\n    \"checkout\" : \"2020-03-09\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e276de1a-63d5-407c-a058-a1a2fa4b2da9",
								"exec": [
									"var code = 200;",
									"",
									"pm.test(\"Status code is \" + code, function () {",
									"    pm.response.to.have.status(code);",
									"});",
									"",
									"pm.test(\"Booking is updated\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Jim\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "token={{my_booker_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"additionalneeds\" : \"Breakfast and dinner\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a1afcc9-2be7-486f-bc96-b0b7ee4e58d8",
								"exec": [
									"var status_code = 201;",
									"pm.test(\"Status code is \"+ status_code, function () {",
									"    pm.response.to.have.status(status_code);",
									"});",
									"",
									"var url = pm.environment.get(\"url\") + \"/booking/\" +  pm.globals.get(\"bookingID\");",
									"",
									"const getRequest = {",
									"        url: url,",
									"        method: 'GET'",
									"};",
									"",
									"pm.sendRequest(getRequest, function (err, res) {",
									"    if (err) { ",
									"        console.log(err);",
									"    }",
									"    ",
									"    console.log(res);",
									"    ",
									"    pm.test('Response should be Not Found', function () {",
									"        pm.expect(res.status).to.include(\"Not Found\");",
									"    });",
									"    ",
									"    pm.test(\"Response code 404\", function() {",
									"        pm.expect(res.code).to.equal(404);",
									"    })",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{my_booker_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}?=",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							],
							"query": [
								{
									"key": "",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}